DEPLOYMENT-ID FULLSTACK_WEB_APP
VERSION-ID 3.0.0

ENVIRONMENT SECTION
NETWORK-NAME fullstack_network

SERVICES SECTION

SERVICE loadbalancer
IMAGE-ID "nginx:alpine"
PORT-MAPPING 80 TO 80
PORT-MAPPING 443 TO 443
VOLUME-MAPPING "./nginx/nginx.conf" TO "/etc/nginx/nginx.conf" (ro)
VOLUME-MAPPING "./ssl" TO "/etc/ssl/certs" (ro)
DEPENDS-ON frontend
DEPENDS-ON api
RESTART-POLICY always
END SERVICE

SERVICE frontend
BUILD-ARGS REACT_APP_ENV="production" REACT_APP_API_URL="https://api.example.com" GENERATE_SOURCEMAP="false"
PORT-MAPPING 3000 TO 80
RESTART-POLICY unless-stopped
RESOURCE-LIMITS CPU "0.2" MEMORY "256M"
END SERVICE

SERVICE api
BUILD-ARGS NODE_ENV="production" PORT="8080" JWT_EXPIRATION="86400"
PORT-MAPPING 8080 TO 8080
ENV-VARIABLE {{DATABASE_URL}}
ENV-VARIABLE {{REDIS_URL}}
ENV-VARIABLE {{JWT_SECRET}}
ENV-VARIABLE {{SESSION_SECRET}}
ENV-VARIABLE {{AWS_ACCESS_KEY_ID}}
ENV-VARIABLE {{AWS_SECRET_ACCESS_KEY}}
ENV-VARIABLE {{S3_BUCKET_NAME}}
DEPENDS-ON database
DEPENDS-ON redis
HEALTH-CHECK "curl -f http://localhost:8080/api/health || exit 1"
RESTART-POLICY unless-stopped
RESOURCE-LIMITS CPU "0.7" MEMORY "768M"
END SERVICE

SERVICE websocket
BUILD-ARGS NODE_ENV="production" WS_PORT="3001"
PORT-MAPPING 3001 TO 3001
ENV-VARIABLE {{REDIS_URL}}
ENV-VARIABLE {{JWT_SECRET}}
DEPENDS-ON redis
RESTART-POLICY unless-stopped
RESOURCE-LIMITS CPU "0.3" MEMORY "384M"
END SERVICE

SERVICE worker
BUILD-ARGS NODE_ENV="production" CONCURRENCY="5"
ENV-VARIABLE {{DATABASE_URL}}
ENV-VARIABLE {{REDIS_URL}}
ENV-VARIABLE {{MAIL_SERVICE_API_KEY}}
ENV-VARIABLE {{AWS_ACCESS_KEY_ID}}
ENV-VARIABLE {{AWS_SECRET_ACCESS_KEY}}
DEPENDS-ON database
DEPENDS-ON redis
RESTART-POLICY unless-stopped
RESOURCE-LIMITS CPU "0.4" MEMORY "512M"
END SERVICE

SERVICE database
IMAGE-ID "postgres:15"
PORT-MAPPING 5432 TO 5432
ENV-VARIABLE {{POSTGRES_USER}}
ENV-VARIABLE {{POSTGRES_PASSWORD}}
ENV-VARIABLE {{POSTGRES_DB}}
VOLUME-MAPPING "./data/postgres" TO "/var/lib/postgresql/data"
VOLUME-MAPPING "./init-scripts" TO "/docker-entrypoint-initdb.d" (ro)
RESTART-POLICY always
RESOURCE-LIMITS CPU "0.8" MEMORY "768M"
END SERVICE

SERVICE redis
IMAGE-ID "redis:7-alpine"
PORT-MAPPING 6379 TO 6379
VOLUME-MAPPING "./data/redis" TO "/data"
COMMAND "redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru"
RESTART-POLICY always
RESOURCE-LIMITS CPU "0.5" MEMORY "512M"
END SERVICE

SERVICE search
IMAGE-ID "elasticsearch:8.11.0"
PORT-MAPPING 9200 TO 9200
ENV-VARIABLE {{DISCOVERY_TYPE}}
ENV-VARIABLE {{ES_JAVA_OPTS}}
VOLUME-MAPPING "./data/elasticsearch" TO "/usr/share/elasticsearch/data"
RESTART-POLICY always
RESOURCE-LIMITS CPU "1.0" MEMORY "1024M"
END SERVICE

SERVICE storage
IMAGE-ID "minio/minio:latest"
PORT-MAPPING 9000 TO 9000
PORT-MAPPING 9001 TO 9001
ENV-VARIABLE {{MINIO_ROOT_USER}}
ENV-VARIABLE {{MINIO_ROOT_PASSWORD}}
VOLUME-MAPPING "./data/minio" TO "/data"
COMMAND "server /data --console-address :9001"
RESTART-POLICY always
RESOURCE-LIMITS CPU "0.3" MEMORY "384M"
END SERVICE

SERVICE monitoring
IMAGE-ID "prom/prometheus:latest"
PORT-MAPPING 9090 TO 9090
VOLUME-MAPPING "./monitoring/prometheus.yml" TO "/etc/prometheus/prometheus.yml" (ro)
VOLUME-MAPPING "./data/prometheus" TO "/prometheus"
DEPENDS-ON api
DEPENDS-ON database
RESTART-POLICY always
END SERVICE

SERVICE grafana
IMAGE-ID "grafana/grafana:latest"
PORT-MAPPING 3002 TO 3000
ENV-VARIABLE {{GF_SECURITY_ADMIN_PASSWORD}}
ENV-VARIABLE {{GF_USERS_ALLOW_SIGN_UP}}
VOLUME-MAPPING "./monitoring/grafana" TO "/var/lib/grafana"
DEPENDS-ON monitoring
RESTART-POLICY always
END SERVICE