DEPLOYMENT-ID MONOLITHIC_APP
VERSION-ID 1.5.0

ENVIRONMENT SECTION
NETWORK-NAME app_network

SERVICES SECTION

SERVICE nginx
IMAGE-ID "nginx:alpine"
PORT-MAPPING 80 TO 80
PORT-MAPPING 443 TO 443
VOLUME-MAPPING "./nginx/nginx.conf" TO "/etc/nginx/nginx.conf" (ro)
VOLUME-MAPPING "./nginx/ssl" TO "/etc/nginx/ssl" (ro)
DEPENDS-ON app
RESTART-POLICY always
END SERVICE

SERVICE app
BUILD-ARGS NODE_ENV="production" BUILD_VERSION="1.5.0" DATABASE_POOL_SIZE="10"
PORT-MAPPING 3000 TO 3000
ENV-VARIABLE {{DATABASE_URL}}
ENV-VARIABLE {{REDIS_URL}}
ENV-VARIABLE {{JWT_SECRET}}
ENV-VARIABLE {{SESSION_SECRET}}
ENV-VARIABLE {{MAIL_SERVICE_API_KEY}}
ENV-VARIABLE {{STORAGE_ACCESS_KEY}}
DEPENDS-ON database
DEPENDS-ON redis
HEALTH-CHECK "curl -f http://localhost:3000/health || exit 1"
RESTART-POLICY unless-stopped
RESOURCE-LIMITS CPU "1.0" MEMORY "1024M"
END SERVICE

SERVICE database
IMAGE-ID "postgres:15-alpine"
PORT-MAPPING 5432 TO 5432
ENV-VARIABLE {{POSTGRES_USER}}
ENV-VARIABLE {{POSTGRES_PASSWORD}}
ENV-VARIABLE {{POSTGRES_DB}}
VOLUME-MAPPING "./data/postgres" TO "/var/lib/postgresql/data"
RESTART-POLICY always
RESOURCE-LIMITS CPU "0.5" MEMORY "512M"
END SERVICE

SERVICE redis
IMAGE-ID "redis:7-alpine"
PORT-MAPPING 6379 TO 6379
VOLUME-MAPPING "./data/redis" TO "/data"
COMMAND "redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru"
RESTART-POLICY always
RESOURCE-LIMITS CPU "0.2" MEMORY "256M"
END SERVICE

SERVICE worker
BUILD-ARGS NODE_ENV="production" WORKER_CONCURRENCY="5"
ENV-VARIABLE {{DATABASE_URL}}
ENV-VARIABLE {{REDIS_URL}}
ENV-VARIABLE {{MAIL_SERVICE_API_KEY}}
DEPENDS-ON database
DEPENDS-ON redis
RESTART-POLICY unless-stopped
RESOURCE-LIMITS CPU "0.5" MEMORY "512M"
END SERVICE

SERVICE monitoring
IMAGE-ID "prom/prometheus:latest"
PORT-MAPPING 9090 TO 9090
VOLUME-MAPPING "./monitoring/prometheus.yml" TO "/etc/prometheus/prometheus.yml" (ro)
VOLUME-MAPPING "./data/prometheus" TO "/prometheus"
DEPENDS-ON app
RESTART-POLICY always
END SERVICE