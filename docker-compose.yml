# Generated by Athena v0.1.0 from MODERN_WEB_APP deployment
# Project Version: 1.0.0
# Generated: 2025-09-22 05:09:02 UTC
# Features: Intelligent defaults, optimized networking, enhanced health checks
# DO NOT EDIT MANUALLY - This file is auto-generated

# Services: 6 configured with intelligent defaults

services:
  logs_collector:
    image: fluent/fluent-bit:latest
    container_name: modern-web-app-logs_collector
    volumes:
    - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
    - /var/log:/var/log:ro
    depends_on:
    - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
    - modern_app_network
    pull_policy: missing
    labels:
      athena.generated: 2025-09-22
      athena.project: MODERN_WEB_APP
      athena.service: logs_collector
      athena.type: generic

  mongodb:
    image: mongo:7.0
    container_name: modern-web-app-mongodb
    ports:
    - 27017:27017
    environment:
    - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
    - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
    - ./data/mongodb:/data/db
    - ./mongo-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test:
      - CMD-SHELL
      - mongosh --eval 'db.adminCommand(ping)' || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: 1024M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
    - modern_app_network
    pull_policy: missing
    labels:
      athena.generated: 2025-09-22
      athena.project: MODERN_WEB_APP
      athena.service: mongodb
      athena.type: webapp

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: modern-web-app-backend
    ports:
    - 3000:3000
    environment:
    - NODE_ENV=${NODE_ENV}
    - JWT_SECRET=${JWT_SECRET}
    - MONGODB_URI=${MONGODB_URI}
    - API_PORT=${API_PORT}
    command: npm start
    depends_on:
    - mongodb
    healthcheck:
      test:
      - CMD-SHELL
      - curl -f http://localhost:3000/api/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
    - modern_app_network
    pull_policy: missing
    labels:
      athena.type: generic
      athena.generated: 2025-09-22
      athena.service: backend
      athena.project: MODERN_WEB_APP

  nginx_proxy:
    image: nginx:alpine
    container_name: modern-web-app-nginx_proxy
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./nginx/conf.d:/etc/nginx/conf.d:ro
    - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
    - backend
    healthcheck:
      test:
      - CMD-SHELL
      - curl -f http://localhost:80/health || exit 1
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always
    networks:
    - modern_app_network
    pull_policy: missing
    labels:
      athena.type: proxy
      athena.project: MODERN_WEB_APP
      athena.service: nginx_proxy
      athena.generated: 2025-09-22

  monitoring:
    image: prom/prometheus:latest
    container_name: modern-web-app-monitoring
    ports:
    - 9090:9090
    volumes:
    - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - ./data/prometheus:/prometheus
    depends_on:
    - backend
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
    - modern_app_network
    pull_policy: missing
    labels:
      athena.project: MODERN_WEB_APP
      athena.generated: 2025-09-22
      athena.type: generic
      athena.service: monitoring

  redis_cache:
    image: redis:7-alpine
    container_name: modern-web-app-redis_cache
    ports:
    - 6379:6379
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
    - ./data/redis:/data
    healthcheck:
      test:
      - CMD-SHELL
      - redis-cli ping || exit 1
      interval: 15s
      timeout: 3s
      retries: 3
      start_period: 20s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
    - modern_app_network
    pull_policy: missing
    labels:
      athena.service: redis_cache
      athena.type: cache
      athena.project: MODERN_WEB_APP
      athena.generated: 2025-09-22
networks:
  modern_app_network:
    driver: bridge
name: MODERN_WEB_APP